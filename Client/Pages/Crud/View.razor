@page "/categorias/visualizar/{Id:int}"
@inject HttpClient http
@inject NavigationManager nav

<div class="container">
    @if (categoria != null)
    {
        <div class="d-flex justify-content-between align-items-center">
            <h1>@categoria.Nome</h1>
            <a href="categorias/index" class="btn btn-outline-info">Voltar</a>
        </div>
        <h3>Detalhes</h3>
        <hr />
        <ul>
            <li>Nome: @categoria.Nome</li>
            <li>Código de identificação: @categoria.Id</li>
        </ul>
    }
    else
    {
        <Aviso Show="true" Class="@_class" Message="@_message"></Aviso>
    }
</div>
@code {
    private bool _error;
    private string _class = "alert-info";
    private string _message = "Carregando...";

    [Parameter]
    public int Id { get; set; }

    private Categoria categoria;
    protected override async Task OnInitializedAsync()
    {
        var uri = nav.ToAbsoluteUri(nav.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var errorBolean))
        {
            _error = bool.Parse(errorBolean);
        }

        try
        {
            if (_error)
                throw new Exception();
            categoria = await http.GetFromJsonAsync<Categoria>($"api/categorias/{Id}");
        }
        catch (Exception)
        {
            _class = "alert-danger";
            _message = "Ocorreu um erro ao tentar visualizar a categoria";
        }
    }
}
